{"ast":null,"code":"import _regeneratorRuntime from \"/Users/EmpauraX/Desktop/Blockchain/Ethereum_Solidity_Developer/CrowdFunding-Ethereum/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/EmpauraX/Desktop/Blockchain/Ethereum_Solidity_Developer/CrowdFunding-Ethereum/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/EmpauraX/Desktop/Blockchain/Ethereum_Solidity_Developer/CrowdFunding-Ethereum/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/EmpauraX/Desktop/Blockchain/Ethereum_Solidity_Developer/CrowdFunding-Ethereum/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/EmpauraX/Desktop/Blockchain/Ethereum_Solidity_Developer/CrowdFunding-Ethereum/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/EmpauraX/Desktop/Blockchain/Ethereum_Solidity_Developer/CrowdFunding-Ethereum/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/EmpauraX/Desktop/Blockchain/Ethereum_Solidity_Developer/CrowdFunding-Ethereum/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/EmpauraX/Desktop/Blockchain/Ethereum_Solidity_Developer/CrowdFunding-Ethereum/pages/campaigns/show.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n//Show details for a given Campaign\nimport React, { Component } from 'react';\nimport { Card, Grid } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/campaign';\nimport web3 from '../../ethereum/web3';\nimport ContributeForm from '../../components/ContributeForm';\n\nvar CampaignShow = /*#__PURE__*/function (_Component) {\n  _inherits(CampaignShow, _Component);\n\n  var _super = _createSuper(CampaignShow);\n\n  function CampaignShow() {\n    _classCallCheck(this, CampaignShow);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CampaignShow, [{\n    key: \"renderCards\",\n    value: function renderCards() {\n      var _this$props = this.props,\n          balance = _this$props.balance,\n          manager = _this$props.manager,\n          minContribution = _this$props.minContribution,\n          requestsCount = _this$props.requestsCount,\n          approversCount = _this$props.approversCount;\n      var items = [{\n        header: manager,\n        meta: 'Ethereum Address of Manager',\n        description: 'The manager created this campaign. The manager is responsible for creating payment requests that requests money from raised captital to pay for services/goods from a given vendor.',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: minContribution,\n        meta: 'Minimum Contribution (Wei)',\n        description: 'You must contribute atleast this much wei to become an approver'\n      }, {\n        header: requestsCount,\n        meta: 'Number of payment requests from manager',\n        description: 'A request is a ticket created by the manager, to request funds of raised captial to pay for services/goods from a vendor for the business'\n      }, {\n        header: approversCount,\n        meta: 'Number of Approvers/Investors',\n        description: 'Number of Investors who have already donated capital to the business. Therefore, have the ability to vote on requests'\n      }, {\n        header: web3.utils.fromWei(balance, 'ether'),\n        meta: 'Campaign Balance (Ether)',\n        description: 'A request is a ticket created by the manager, to request funds of raised captial to pay for services/goods from a vendor for the business'\n      }];\n      return __jsx(Card.Group, {\n        items: items,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 16\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }, __jsx(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, \"CampaignShow Page\"), this.renderCards(), __jsx(ContributeForm, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    //static is called by the class itself. Next requires this. \n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n        var campaign, summary;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                //returns instance of Campaign\n                campaign = Campaign(props.query.address); // call Campaign and pass in actual address of campaign\n                //Calls getSummary on the campaign instance.\n                //Returns: object{}\n                // '0': '100', - minContribution\n                // '1': '0', - balance\n                // '2': '0', - requestsCount\n                // '3': '0', - contibutorsCount\n                // '4': '0xa53153f270C71E507...' - contibutorsCount\n\n                _context.next = 3;\n                return campaign.methods.getSummary().call();\n\n              case 3:\n                summary = _context.sent;\n                return _context.abrupt(\"return\", {\n                  minContribution: summary[0],\n                  balance: summary[1],\n                  requestsCount: summary[2],\n                  approversCount: summary[3],\n                  manager: summary[4]\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return CampaignShow;\n}(Component);\n\nexport default CampaignShow;","map":{"version":3,"sources":["/Users/EmpauraX/Desktop/Blockchain/Ethereum_Solidity_Developer/CrowdFunding-Ethereum/pages/campaigns/show.js"],"names":["React","Component","Card","Grid","Layout","Campaign","web3","ContributeForm","CampaignShow","props","balance","manager","minContribution","requestsCount","approversCount","items","header","meta","description","style","overflowWrap","utils","fromWei","renderCards","campaign","query","address","methods","getSummary","call","summary"],"mappings":";;;;;;;;;;;;;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,mBAA3B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;IAEMC,Y;;;;;;;;;;;;;kCA2BY;AAAA,wBAQN,KAAKC,KARC;AAAA,UAGNC,OAHM,eAGNA,OAHM;AAAA,UAINC,OAJM,eAINA,OAJM;AAAA,UAKNC,eALM,eAKNA,eALM;AAAA,UAMNC,aANM,eAMNA,aANM;AAAA,UAONC,cAPM,eAONA,cAPM;AAUV,UAAMC,KAAK,GAAG,CACV;AACIC,QAAAA,MAAM,EAAEL,OADZ;AAEIM,QAAAA,IAAI,EAAE,6BAFV;AAGIC,QAAAA,WAAW,EAAE,qLAHjB;AAIIC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAE;AAAhB;AAJX,OADU,EAQV;AACIJ,QAAAA,MAAM,EAAEJ,eADZ;AAEIK,QAAAA,IAAI,EAAE,4BAFV;AAGIC,QAAAA,WAAW,EAAE;AAHjB,OARU,EAeV;AACIF,QAAAA,MAAM,EAAEH,aADZ;AAEII,QAAAA,IAAI,EAAE,yCAFV;AAGIC,QAAAA,WAAW,EAAE;AAHjB,OAfU,EAqBV;AACIF,QAAAA,MAAM,EAAEF,cADZ;AAEIG,QAAAA,IAAI,EAAE,+BAFV;AAGIC,QAAAA,WAAW,EAAE;AAHjB,OArBU,EA2BV;AACIF,QAAAA,MAAM,EAAEV,IAAI,CAACe,KAAL,CAAWC,OAAX,CAAmBZ,OAAnB,EAA4B,OAA5B,CADZ;AAEIO,QAAAA,IAAI,EAAE,0BAFV;AAGIC,QAAAA,WAAW,EAAE;AAHjB,OA3BU,CAAd;AAkCA,aAAO,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAEH,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;;6BAEQ;AACL,aACA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAEK,KAAKQ,WAAL,EAFL,EAGI,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADA;AAOH;;;AAhFD;;uGAC6Bd,K;;;;;;AAEzB;AACMe,gBAAAA,Q,GAAWnB,QAAQ,CAACI,KAAK,CAACgB,KAAN,CAAYC,OAAb,C,EAAuB;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;;;uBACsBF,QAAQ,CAACG,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,E;;;AAAhBC,gBAAAA,O;iDAGC;AACHlB,kBAAAA,eAAe,EAAEkB,OAAO,CAAC,CAAD,CADrB;AAEHpB,kBAAAA,OAAO,EAAEoB,OAAO,CAAC,CAAD,CAFb;AAGHjB,kBAAAA,aAAa,EAAEiB,OAAO,CAAC,CAAD,CAHnB;AAIHhB,kBAAAA,cAAc,EAAEgB,OAAO,CAAC,CAAD,CAJpB;AAKHnB,kBAAAA,OAAO,EAAEmB,OAAO,CAAC,CAAD;AALb,iB;;;;;;;;;;;;;;;;;;;EAlBY7B,S;;AAqF3B,eAAeO,YAAf","sourcesContent":["//Show details for a given Campaign\n\nimport React, { Component } from 'react';\nimport { Card, Grid } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/campaign'\nimport web3 from '../../ethereum/web3';\nimport ContributeForm from '../../components/ContributeForm';\n\nclass CampaignShow extends Component {\n\n    //static is called by the class itself. Next requires this. \n    static async getInitialProps(props) {\n\n        //returns instance of Campaign\n        const campaign = Campaign(props.query.address); // call Campaign and pass in actual address of campaign\n        \n        //Calls getSummary on the campaign instance.\n        //Returns: object{}\n        // '0': '100', - minContribution\n        // '1': '0', - balance\n        // '2': '0', - requestsCount\n        // '3': '0', - contibutorsCount\n        // '4': '0xa53153f270C71E507...' - contibutorsCount\n        const summary = await campaign.methods.getSummary().call();\n        \n        //Return individual properties of summary object returned from contract.\n        return {\n            minContribution: summary[0],\n            balance: summary[1],\n            requestsCount: summary[2],\n            approversCount: summary[3],\n            manager: summary[4]\n        };\n    };\n\n    renderCards() {\n\n        const {\n            balance,\n            manager,\n            minContribution,\n            requestsCount,\n            approversCount\n        } = this.props;\n\n        const items = [\n            {\n                header: manager,\n                meta: 'Ethereum Address of Manager',\n                description: 'The manager created this campaign. The manager is responsible for creating payment requests that requests money from raised captital to pay for services/goods from a given vendor.',\n                style: { overflowWrap: 'break-word' }\n            },\n\n            {\n                header: minContribution,\n                meta: 'Minimum Contribution (Wei)',\n                description: 'You must contribute atleast this much wei to become an approver'\n\n            },\n\n            {\n                header: requestsCount,\n                meta: 'Number of payment requests from manager',\n                description: 'A request is a ticket created by the manager, to request funds of raised captial to pay for services/goods from a vendor for the business'\n            },\n\n            {\n                header: approversCount,\n                meta: 'Number of Approvers/Investors',\n                description: 'Number of Investors who have already donated capital to the business. Therefore, have the ability to vote on requests'\n            },\n\n            {\n                header: web3.utils.fromWei(balance, 'ether'),\n                meta: 'Campaign Balance (Ether)',\n                description: 'A request is a ticket created by the manager, to request funds of raised captial to pay for services/goods from a vendor for the business'\n            }\n        ];\n\n        return <Card.Group items={items} />\n    }\n\n    render() {\n        return (\n        <Layout>\n            <h3>CampaignShow Page</h3>\n            {this.renderCards()}\n            <ContributeForm />\n        </Layout>\n        );\n    };\n}\n\nexport default CampaignShow;"]},"metadata":{},"sourceType":"module"}