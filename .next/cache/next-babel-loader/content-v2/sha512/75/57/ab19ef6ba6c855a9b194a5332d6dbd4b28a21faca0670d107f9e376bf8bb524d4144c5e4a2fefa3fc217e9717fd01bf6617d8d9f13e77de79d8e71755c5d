{"ast":null,"code":"import _regeneratorRuntime from \"/Users/EmpauraX/Desktop/Blockchain/Ethereum_Solidity_Developer/CrowdFunding-Ethereum/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/EmpauraX/Desktop/Blockchain/Ethereum_Solidity_Developer/CrowdFunding-Ethereum/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/EmpauraX/Desktop/Blockchain/Ethereum_Solidity_Developer/CrowdFunding-Ethereum/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/EmpauraX/Desktop/Blockchain/Ethereum_Solidity_Developer/CrowdFunding-Ethereum/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/EmpauraX/Desktop/Blockchain/Ethereum_Solidity_Developer/CrowdFunding-Ethereum/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/EmpauraX/Desktop/Blockchain/Ethereum_Solidity_Developer/CrowdFunding-Ethereum/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/EmpauraX/Desktop/Blockchain/Ethereum_Solidity_Developer/CrowdFunding-Ethereum/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/EmpauraX/Desktop/Blockchain/Ethereum_Solidity_Developer/CrowdFunding-Ethereum/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/EmpauraX/Desktop/Blockchain/Ethereum_Solidity_Developer/CrowdFunding-Ethereum/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/EmpauraX/Desktop/Blockchain/Ethereum_Solidity_Developer/CrowdFunding-Ethereum/components/ContributeForm.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n//Contribute Form Component for Campaign\nimport { Router } from '../routes';\nimport React, { Component } from 'react';\nimport { Button, Form, Input, Message } from 'semantic-ui-react';\nimport Campaign from '../ethereum/campaign';\nimport web3 from '../ethereum/web3';\n\nvar ContributeForm = /*#__PURE__*/function (_Component) {\n  _inherits(ContributeForm, _Component);\n\n  var _super = _createSuper(ContributeForm);\n\n  function ContributeForm() {\n    var _this;\n\n    _classCallCheck(this, ContributeForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      value: '',\n      errMsg: '',\n      loadingFlag: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var campaign, accounts;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault(); //call campaign function passing in the target campaignAddress. Returns instance of target campaign.\n\n                campaign = Campaign(_this.props.campaignAddress); //Display Loader when the transaction is being processed by network\n\n                _this.setState({\n                  loadingFlag: true,\n                  errMsg: ''\n                });\n\n                _context.prev = 3;\n                _context.next = 6;\n                return web3.eth.getAccounts();\n\n              case 6:\n                accounts = _context.sent;\n                _context.next = 9;\n                return campaign.methods.contribute().send({\n                  from: accounts[0],\n                  value: web3.utils.toWei(_this.state.value, 'ether')\n                });\n\n              case 9:\n                //Refresh Page when the transaction if successfully completed\n                Router.replaceRoute(\"/campaigns/\".concat(_this.props.campaignAddress));\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](3);\n\n                //If error, set errMsg to error\n                _this.setState({\n                  errMsg: _context.t0.message\n                });\n\n              case 15:\n                ; // Execution finished, clear flags and messages\n\n                _this.setState({\n                  loadingFlag: false,\n                  errMsg: ''\n                });\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[3, 12]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(ContributeForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Form, {\n        onSubmit: this.onSubmit,\n        error: !!this.state.errMsg,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, __jsx(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, \"Amount ot Contribute\"), __jsx(Input, {\n        value: this.state.value,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            value: event.target.value\n          });\n        },\n        label: \"ether\",\n        labelPosition: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      })), __jsx(Message, {\n        error: true,\n        header: \"Oops!\",\n        content: this.state.errMsg,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }), __jsx(Button, {\n        primary: true,\n        loading: this.state.loadingFlag,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, \" Contribute! \"));\n    }\n  }]);\n\n  return ContributeForm;\n}(Component);\n\nexport default ContributeForm;","map":{"version":3,"sources":["/Users/EmpauraX/Desktop/Blockchain/Ethereum_Solidity_Developer/CrowdFunding-Ethereum/components/ContributeForm.js"],"names":["Router","React","Component","Button","Form","Input","Message","Campaign","web3","ContributeForm","value","errMsg","loadingFlag","event","preventDefault","campaign","props","campaignAddress","setState","eth","getAccounts","accounts","methods","contribute","send","from","utils","toWei","state","replaceRoute","message","onSubmit","target"],"mappings":"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","sourcesContent":["//Contribute Form Component for Campaign\n\nimport { Router } from '../routes';\nimport React, { Component } from 'react';\nimport {Button, Form, Input, Message } from 'semantic-ui-react';\nimport Campaign from '../ethereum/campaign';\nimport web3 from '../ethereum/web3';\n\nclass ContributeForm extends Component {\n\n    state = {\n        value: '',\n        errMsg: '',\n        loadingFlag: false\n    };\n\n    onSubmit = async (event) => {\n        event.preventDefault();\n\n       \n        //call campaign function passing in the target campaignAddress. Returns instance of target campaign.\n        const campaign = Campaign(this.props.campaignAddress);\n        \n        //Display Loader when the transaction is being processed by network\n        this.setState({ loadingFlag: true, errMsg: '' });\n\n        try {\n\n            //Try call the contribute function from the campaign contract using the metamask account and the amount specified from form.\n            const accounts = await web3.eth.getAccounts();\n\n            await campaign.methods.contribute().send({\n                from: accounts[0],\n                value: web3.utils.toWei( this.state.value, 'ether')\n            });\n\n            //Refresh Page when the transaction if successfully completed\n            Router.replaceRoute(`/campaigns/${this.props.campaignAddress}`);\n\n        } catch (err) {\n            //If error, set errMsg to error\n            this.setState({ errMsg: err.message});\n        };\n\n        // Execution finished, clear flags and messages\n        this.setState({ loadingFlag: false, errMsg: '' });\n    };\n\n    render() {\n        return (\n            <Form onSubmit={this.onSubmit} error={!!this.state.errMsg}>\n                <Form.Field>\n                    <label>Amount ot Contribute</label>\n                    <Input \n                        value={this.state.value}\n                        onChange={event => this.setState({ value: event.target.value })}\n                        label=\"ether\"\n                        labelPosition=\"right\"\n                    />\n                </Form.Field>\n                <Message error header='Oops!' content={this.state.errMsg} />\n                <Button primary loading={this.state.loadingFlag}> Contribute! </Button>\n            </Form>\n        );\n    }\n}\n\nexport default ContributeForm;"]},"metadata":{},"sourceType":"module"}