{"ast":null,"code":"var _jsxFileName = \"/Users/EmpauraX/Desktop/Blockchain/Ethereum_Solidity_Developer/CrowdFunding-Ethereum/components/ContributeForm.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//Contribute Form Component for Campaign\nimport { Router } from '../routes';\nimport React, { Component } from 'react';\nimport { Button, Form, Input, Message } from 'semantic-ui-react';\nimport Campaign from '../ethereum/campaign';\nimport web3 from '../ethereum/web3';\nimport { loadGetInitialProps } from 'next/dist/next-server/lib/utils';\n\nclass ContributeForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      value: '',\n      errMsg: '',\n      loadingFlag: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault(); //call campaign function passing in the target campaignAddress. Returns instance of target campaign.\n\n      const campaign = Campaign(this.props.campaignAddress); //Display Loader when the transaction is being processed by network\n\n      this.setState({\n        loadingFlag: true\n      });\n\n      try {\n        //Try call the contribute function from the campaign contract using the metamask account and the amount specified from form.\n        const accounts = await web3.eth.getAccounts();\n        await campaign.methods.contribute().send({\n          from: accounts[0],\n          value: web3.utils.toWei(this.state.value, 'ether')\n        }); //Refresh Page when the transaction if successfully completed\n\n        Router.replaceRoute(`/campaigns/${this.props.campaignAddress}`);\n      } catch (err) {\n        //If error, set errMsg to error\n        this.setState({\n          errMsg: err.message\n        });\n      }\n\n      ; // Execution finished, clear flags and messages\n\n      this.setState({\n        loadingFlag: false,\n        errMsg: ''\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, \"Amount ot Contribute\"), __jsx(Input, {\n      value: this.state.value,\n      onChange: event => this.setState({\n        value: event.target.value\n      }),\n      label: \"ether\",\n      labelPosition: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    })), __jsx(Button, {\n      primary: true,\n      loading: this.state.loadingFlag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \" Contribute! \"));\n  }\n\n}\n\nexport default ContributeForm;","map":{"version":3,"sources":["/Users/EmpauraX/Desktop/Blockchain/Ethereum_Solidity_Developer/CrowdFunding-Ethereum/components/ContributeForm.js"],"names":["Router","React","Component","Button","Form","Input","Message","Campaign","web3","loadGetInitialProps","ContributeForm","value","errMsg","loadingFlag","event","preventDefault","campaign","props","campaignAddress","setState","accounts","eth","getAccounts","methods","contribute","send","from","utils","toWei","state","replaceRoute","err","message","render","onSubmit","target"],"mappings":";;;;;AAAA;AAEA,SAASA,MAAT,QAAuB,WAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,KAAtB,EAA6BC,OAA7B,QAA4C,mBAA5C;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,mBAAT,QAAoC,iCAApC;;AAEA,MAAMC,cAAN,SAA6BR,SAA7B,CAAuC;AAAA;AAAA;;AAAA,mCAE3B;AACJS,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,MAAM,EAAE,EAFJ;AAGJC,MAAAA,WAAW,EAAE;AAHT,KAF2B;;AAAA,sCAQxB,MAAOC,KAAP,IAAiB;AACxBA,MAAAA,KAAK,CAACC,cAAN,GADwB,CAIxB;;AACA,YAAMC,QAAQ,GAAGT,QAAQ,CAAC,KAAKU,KAAL,CAAWC,eAAZ,CAAzB,CALwB,CAOxB;;AACA,WAAKC,QAAL,CAAc;AAAEN,QAAAA,WAAW,EAAE;AAAf,OAAd;;AAEA,UAAI;AAEA;AACA,cAAMO,QAAQ,GAAG,MAAMZ,IAAI,CAACa,GAAL,CAASC,WAAT,EAAvB;AAEA,cAAMN,QAAQ,CAACO,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,CAAmC;AACrCC,UAAAA,IAAI,EAAEN,QAAQ,CAAC,CAAD,CADuB;AAErCT,UAAAA,KAAK,EAAEH,IAAI,CAACmB,KAAL,CAAWC,KAAX,CAAkB,KAAKC,KAAL,CAAWlB,KAA7B,EAAoC,OAApC;AAF8B,SAAnC,CAAN,CALA,CAUA;;AACAX,QAAAA,MAAM,CAAC8B,YAAP,CAAqB,cAAa,KAAKb,KAAL,CAAWC,eAAgB,EAA7D;AAEH,OAbD,CAaE,OAAOa,GAAP,EAAY;AACV;AACA,aAAKZ,QAAL,CAAc;AAAEP,UAAAA,MAAM,EAAEmB,GAAG,CAACC;AAAd,SAAd;AACH;;AAAA,OA1BuB,CA4BxB;;AACA,WAAKb,QAAL,CAAc;AAAEN,QAAAA,WAAW,EAAE,KAAf;AAAsBD,QAAAA,MAAM,EAAE;AAA9B,OAAd;AACH,KAtCkC;AAAA;;AAwCnCqB,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI,MAAC,KAAD;AACI,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWlB,KADtB;AAEI,MAAA,QAAQ,EAAEG,KAAK,IAAI,KAAKK,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAEG,KAAK,CAACqB,MAAN,CAAaxB;AAAtB,OAAd,CAFvB;AAGI,MAAA,KAAK,EAAC,OAHV;AAII,MAAA,aAAa,EAAC,OAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAUI,MAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,OAAO,EAAE,KAAKkB,KAAL,CAAWhB,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAVJ,CADJ;AAcH;;AAvDkC;;AA0DvC,eAAeH,cAAf","sourcesContent":["//Contribute Form Component for Campaign\n\nimport { Router } from '../routes';\nimport React, { Component } from 'react';\nimport {Button, Form, Input, Message } from 'semantic-ui-react';\nimport Campaign from '../ethereum/campaign';\nimport web3 from '../ethereum/web3';\nimport { loadGetInitialProps } from 'next/dist/next-server/lib/utils';\n\nclass ContributeForm extends Component {\n\n    state = {\n        value: '',\n        errMsg: '',\n        loadingFlag: false\n    };\n\n    onSubmit = async (event) => {\n        event.preventDefault();\n\n       \n        //call campaign function passing in the target campaignAddress. Returns instance of target campaign.\n        const campaign = Campaign(this.props.campaignAddress);\n        \n        //Display Loader when the transaction is being processed by network\n        this.setState({ loadingFlag: true});\n\n        try {\n\n            //Try call the contribute function from the campaign contract using the metamask account and the amount specified from form.\n            const accounts = await web3.eth.getAccounts();\n\n            await campaign.methods.contribute().send({\n                from: accounts[0],\n                value: web3.utils.toWei( this.state.value, 'ether')\n            });\n\n            //Refresh Page when the transaction if successfully completed\n            Router.replaceRoute(`/campaigns/${this.props.campaignAddress}`);\n\n        } catch (err) {\n            //If error, set errMsg to error\n            this.setState({ errMsg: err.message});\n        };\n\n        // Execution finished, clear flags and messages\n        this.setState({ loadingFlag: false, errMsg: '' });\n    };\n\n    render() {\n        return (\n            <Form onSubmit={this.onSubmit}>\n                <Form.Field>\n                    <label>Amount ot Contribute</label>\n                    <Input \n                        value={this.state.value}\n                        onChange={event => this.setState({ value: event.target.value })}\n                        label=\"ether\"\n                        labelPosition=\"right\"\n                    />\n                </Form.Field>\n                <Button primary loading={this.state.loadingFlag}> Contribute! </Button>\n            </Form>\n        );\n    }\n}\n\nexport default ContributeForm;"]},"metadata":{},"sourceType":"module"}