{"ast":null,"code":"var _jsxFileName = \"/Users/EmpauraX/Desktop/Blockchain/Ethereum_Solidity_Developer/CrowdFunding-Ethereum/pages/campaigns/show.js\";\nvar __jsx = React.createElement;\n//Show details for a given Campaign\nimport React, { Component } from 'react';\nimport { Card } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/campaign';\n\nclass CampaignShow extends Component {\n  //static is called by the class itself. Next requires this. \n  static async getInitialProps(props) {\n    //returns instance of Campaign\n    const campaign = Campaign(props.query.address); // call Campaign and pass in actual address of campaign\n    //Calls getSummary on the campaign instance.\n    //Returns: object{}\n    // '0': '100', - minContribution\n    // '1': '0', - balance\n    // '2': '0', - requestsCount\n    // '3': '0', - contibutorsCount\n    // '4': '0xa53153f270C71E507...' - contibutorsCount\n\n    const summary = await campaign.methods.getSummary().call(); //Return individual properties of summary object returned from contract.\n\n    return {\n      minContribution: summary[0],\n      balance: summary[1],\n      requestsCount: summary[2],\n      approversCount: summary[3],\n      manager: summary[4]\n    };\n  }\n\n  renderCards() {\n    const {\n      balance,\n      manager,\n      minContribution,\n      requestsCount,\n      approversCount\n    } = this.props;\n    const items = [{\n      header: manager,\n      meta: 'Ethereum Address of Manager',\n      description: 'The manager created this campaign. The manager is responsible for creating payment requests that requests money from raised captital to pay for services/goods from a given vendor.',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }, {\n      header: minContribution,\n      meta: 'Minimum Contribution (Wei)',\n      description: 'You must contribute atleast this much wei to become an approver'\n    }, {\n      header: requestsCount,\n      meta: 'Number of payment requests from manager',\n      description: 'A request is a ticket created by the manager, to request funds of raised captial to pay for services/goods from a vendor for the business'\n    }, {\n      header: approversCount,\n      meta: 'Number of Approvers/Investors',\n      description: 'Number of Investors who have already donated capital to the business. Therefore, have the ability to vote on requests'\n    }];\n    return __jsx(Card.Group, {\n      items: items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 16\n      }\n    });\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, \"CampaignShow Page\"), this.renderCards());\n  }\n\n}\n\nexport default CampaignShow;","map":{"version":3,"sources":["/Users/EmpauraX/Desktop/Blockchain/Ethereum_Solidity_Developer/CrowdFunding-Ethereum/pages/campaigns/show.js"],"names":["React","Component","Card","Layout","Campaign","CampaignShow","getInitialProps","props","campaign","query","address","summary","methods","getSummary","call","minContribution","balance","requestsCount","approversCount","manager","renderCards","items","header","meta","description","style","overflowWrap","render"],"mappings":";;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAEjC;AACA,eAAaK,eAAb,CAA6BC,KAA7B,EAAoC;AAEhC;AACA,UAAMC,QAAQ,GAAGJ,QAAQ,CAACG,KAAK,CAACE,KAAN,CAAYC,OAAb,CAAzB,CAHgC,CAGgB;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAMC,OAAO,GAAG,MAAMH,QAAQ,CAACI,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,EAAtB,CAZgC,CAchC;;AACA,WAAO;AACHC,MAAAA,eAAe,EAAEJ,OAAO,CAAC,CAAD,CADrB;AAEHK,MAAAA,OAAO,EAAEL,OAAO,CAAC,CAAD,CAFb;AAGHM,MAAAA,aAAa,EAAEN,OAAO,CAAC,CAAD,CAHnB;AAIHO,MAAAA,cAAc,EAAEP,OAAO,CAAC,CAAD,CAJpB;AAKHQ,MAAAA,OAAO,EAAER,OAAO,CAAC,CAAD;AALb,KAAP;AAOH;;AAEDS,EAAAA,WAAW,GAAG;AAEV,UAAM;AACFJ,MAAAA,OADE;AAEFG,MAAAA,OAFE;AAGFJ,MAAAA,eAHE;AAIFE,MAAAA,aAJE;AAKFC,MAAAA;AALE,QAMF,KAAKX,KANT;AAQA,UAAMc,KAAK,GAAG,CACV;AACIC,MAAAA,MAAM,EAAEH,OADZ;AAEII,MAAAA,IAAI,EAAE,6BAFV;AAGIC,MAAAA,WAAW,EAAE,qLAHjB;AAIIC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB;AAJX,KADU,EAQV;AACIJ,MAAAA,MAAM,EAAEP,eADZ;AAEIQ,MAAAA,IAAI,EAAE,4BAFV;AAGIC,MAAAA,WAAW,EAAE;AAHjB,KARU,EAeV;AACIF,MAAAA,MAAM,EAAEL,aADZ;AAEIM,MAAAA,IAAI,EAAE,yCAFV;AAGIC,MAAAA,WAAW,EAAE;AAHjB,KAfU,EAqBV;AACIF,MAAAA,MAAM,EAAEJ,cADZ;AAEIK,MAAAA,IAAI,EAAE,+BAFV;AAGIC,MAAAA,WAAW,EAAE;AAHjB,KArBU,CAAd;AA4BA,WAAO,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEH,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAEDM,EAAAA,MAAM,GAAG;AACL,WACA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEK,KAAKP,WAAL,EAFL,CADA;AAMH;;AA3EgC;;AA8ErC,eAAef,YAAf","sourcesContent":["//Show details for a given Campaign\n\nimport React, { Component } from 'react';\nimport { Card } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/campaign'\n\nclass CampaignShow extends Component {\n\n    //static is called by the class itself. Next requires this. \n    static async getInitialProps(props) {\n\n        //returns instance of Campaign\n        const campaign = Campaign(props.query.address); // call Campaign and pass in actual address of campaign\n        \n        //Calls getSummary on the campaign instance.\n        //Returns: object{}\n        // '0': '100', - minContribution\n        // '1': '0', - balance\n        // '2': '0', - requestsCount\n        // '3': '0', - contibutorsCount\n        // '4': '0xa53153f270C71E507...' - contibutorsCount\n        const summary = await campaign.methods.getSummary().call();\n        \n        //Return individual properties of summary object returned from contract.\n        return {\n            minContribution: summary[0],\n            balance: summary[1],\n            requestsCount: summary[2],\n            approversCount: summary[3],\n            manager: summary[4]\n        };\n    };\n\n    renderCards() {\n\n        const {\n            balance,\n            manager,\n            minContribution,\n            requestsCount,\n            approversCount\n        } = this.props;\n\n        const items = [\n            {\n                header: manager,\n                meta: 'Ethereum Address of Manager',\n                description: 'The manager created this campaign. The manager is responsible for creating payment requests that requests money from raised captital to pay for services/goods from a given vendor.',\n                style: { overflowWrap: 'break-word' }\n            },\n\n            {\n                header: minContribution,\n                meta: 'Minimum Contribution (Wei)',\n                description: 'You must contribute atleast this much wei to become an approver'\n\n            },\n\n            {\n                header: requestsCount,\n                meta: 'Number of payment requests from manager',\n                description: 'A request is a ticket created by the manager, to request funds of raised captial to pay for services/goods from a vendor for the business'\n            },\n\n            {\n                header: approversCount,\n                meta: 'Number of Approvers/Investors',\n                description: 'Number of Investors who have already donated capital to the business. Therefore, have the ability to vote on requests'\n            }\n        ];\n\n        return <Card.Group items={items} />\n    }\n\n    render() {\n        return (\n        <Layout>\n            <h3>CampaignShow Page</h3>\n            {this.renderCards()}\n        </Layout>\n        );\n    };\n}\n\nexport default CampaignShow;"]},"metadata":{},"sourceType":"module"}