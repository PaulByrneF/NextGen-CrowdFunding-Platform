{"ast":null,"code":"import Web3 from 'web3'; // Connect to metamask\n\nwindow.ethereum.request({\n  method: 'eth_requestAccounts'\n}); //create new instance of Web3 and pass the injected web3 from metamask and it's respective provider to Rinkeby testnet specified in MetaMask tool\n// hijack injected web3 instance from metamask and pass provider into web3 v1.0.3\n\nvar web3 = new Web3(Web3.givenProvider); //Export instance\n\nexport default web3;","map":{"version":3,"sources":["/Users/EmpauraX/Desktop/Blockchain/Ethereum_Solidity_Developer/CrowdFunding-Ethereum/ethereum/web3.js"],"names":["Web3","window","ethereum","request","method","web3","givenProvider"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB,C,CAEA;;AACAC,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAxB,E,CAEA;AACA;;AACA,IAAMC,IAAI,GAAG,IAAIL,IAAJ,CAASA,IAAI,CAACM,aAAd,CAAb,C,CAEA;;AACA,eAAeD,IAAf","sourcesContent":["import Web3 from 'web3'; \n\n// Connect to metamask\nwindow.ethereum.request({ method: 'eth_requestAccounts' });\n\n//create new instance of Web3 and pass the injected web3 from metamask and it's respective provider to Rinkeby testnet specified in MetaMask tool\n// hijack injected web3 instance from metamask and pass provider into web3 v1.0.3\nconst web3 = new Web3(Web3.givenProvider);\n\n//Export instance\nexport default web3;"]},"metadata":{},"sourceType":"module"}