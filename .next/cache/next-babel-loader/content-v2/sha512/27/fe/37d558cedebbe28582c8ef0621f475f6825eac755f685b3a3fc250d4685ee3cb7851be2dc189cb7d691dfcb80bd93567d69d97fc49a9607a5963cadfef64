{"ast":null,"code":"var _jsxFileName = \"/Users/EmpauraX/Desktop/Blockchain/Ethereum_Solidity_Developer/CrowdFunding-Ethereum/components/RequestRow.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Button, Table } from 'semantic-ui-react';\nimport web3 from '../ethereum/web3';\nimport Campaign from '../ethereum/campaign';\n\nclass RequestRow extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onApprove\", async () => {\n      //Get instance of campaign contract\n      const campaign = Campaign(this.props.address); //Get accounts provided by metamask\n\n      const accounts = await web3.eth.getAccounts(); //send request to campaign, calling the approveRequests function passing in the id.\n\n      await campaign.methods.approveRequest(this.props.id).send({\n        from: accounts[0]\n      });\n    });\n\n    _defineProperty(this, \"onFinalize\", async () => {\n      const campaign = Campaign(this.props.address);\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.finalizeRequest(this.props.id).send({\n        from: accounts[0]\n      });\n    });\n  }\n\n  render() {\n    const {\n      Row,\n      Cell\n    } = Table;\n    const {\n      id,\n      request,\n      approversCount\n    } = this.props;\n    return __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, __jsx(Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, id), __jsx(Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, request.description), __jsx(Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, web3.utils.fromWei(request.value, 'ether')), __jsx(Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, request.recipient), __jsx(Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, request.approvalCount, \" / \", approversCount, \" \"), __jsx(Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, __jsx(Button, {\n      color: \"green\",\n      basic: true,\n      onClick: this.onApprove,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 23\n      }\n    }, \"Approve\")), __jsx(Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, __jsx(Button, {\n      color: \"teal\",\n      basic: true,\n      onClick: this.onFinalize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 23\n      }\n    }, \"Finalize\")));\n  }\n\n}\n\nexport default RequestRow;","map":{"version":3,"sources":["/Users/EmpauraX/Desktop/Blockchain/Ethereum_Solidity_Developer/CrowdFunding-Ethereum/components/RequestRow.js"],"names":["React","Component","Button","Table","web3","Campaign","RequestRow","campaign","props","address","accounts","eth","getAccounts","methods","approveRequest","id","send","from","finalizeRequest","render","Row","Cell","request","approversCount","description","utils","fromWei","value","recipient","approvalCount","onApprove","onFinalize"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAAA;AAAA;;AAAA,uCAEnB,YAAY;AAEpB;AACA,YAAMM,QAAQ,GAAGF,QAAQ,CAAC,KAAKG,KAAL,CAAWC,OAAZ,CAAzB,CAHoB,CAKpB;;AACA,YAAMC,QAAQ,GAAG,MAAMN,IAAI,CAACO,GAAL,CAASC,WAAT,EAAvB,CANoB,CAQpB;;AACA,YAAML,QAAQ,CAACM,OAAT,CAAiBC,cAAjB,CAAgC,KAAKN,KAAL,CAAWO,EAA3C,EAA+CC,IAA/C,CAAoD;AACtDC,QAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AADwC,OAApD,CAAN;AAGH,KAd8B;;AAAA,wCAgBlB,YAAY;AAErB,YAAMH,QAAQ,GAAGF,QAAQ,CAAC,KAAKG,KAAL,CAAWC,OAAZ,CAAzB;AAEA,YAAMC,QAAQ,GAAG,MAAMN,IAAI,CAACO,GAAL,CAASC,WAAT,EAAvB;AAEA,YAAML,QAAQ,CAACM,OAAT,CAAiBK,eAAjB,CAAiC,KAAKV,KAAL,CAAWO,EAA5C,EAAgDC,IAAhD,CAAqD;AACvDC,QAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AADyC,OAArD,CAAN;AAGH,KAzB8B;AAAA;;AA0B/BS,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAAgBlB,KAAtB;AACA,UAAM;AAACY,MAAAA,EAAD;AAAKO,MAAAA,OAAL;AAAcC,MAAAA;AAAd,QAAgC,KAAKf,KAA3C;AAEA,WACI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOO,EAAP,CADJ,EAEI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOO,OAAO,CAACE,WAAf,CAFJ,EAGI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOpB,IAAI,CAACqB,KAAL,CAAWC,OAAX,CAAmBJ,OAAO,CAACK,KAA3B,EAAkC,OAAlC,CAAP,CAHJ,EAII,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOL,OAAO,CAACM,SAAf,CAJJ,EAKI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAON,OAAO,CAACO,aAAf,SAAkCN,cAAlC,MALJ,EAMI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAsB,MAAA,KAAK,MAA3B;AAA4B,MAAA,OAAO,EAAE,KAAKO,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAN,CANJ,EAOI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,KAAK,MAA1B;AAA2B,MAAA,OAAO,EAAE,KAAKC,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAN,CAPJ,CADJ;AAWH;;AAzC8B;;AA4CnC,eAAezB,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Table } from 'semantic-ui-react';\nimport web3 from '../ethereum/web3';\nimport Campaign from '../ethereum/campaign';\n\nclass RequestRow extends Component {\n\n    onApprove = async () => {\n\n        //Get instance of campaign contract\n        const campaign = Campaign(this.props.address);\n\n        //Get accounts provided by metamask\n        const accounts = await web3.eth.getAccounts();\n\n        //send request to campaign, calling the approveRequests function passing in the id.\n        await campaign.methods.approveRequest(this.props.id).send({\n            from: accounts[0]\n        });\n    };\n\n    onFinalize = async () => {\n\n        const campaign = Campaign(this.props.address);\n\n        const accounts = await web3.eth.getAccounts();\n\n        await campaign.methods.finalizeRequest(this.props.id).send({\n            from: accounts[0]\n        });\n    }\n    render() {\n        const { Row, Cell } = Table;\n        const {id, request, approversCount} = this.props;\n\n        return (\n            <Row>\n                <Cell>{id}</Cell>\n                <Cell>{request.description}</Cell>\n                <Cell>{web3.utils.fromWei(request.value, 'ether')}</Cell>\n                <Cell>{request.recipient}</Cell>\n                <Cell>{request.approvalCount} / { approversCount } </Cell>\n                <Cell><Button color=\"green\" basic onClick={this.onApprove}>Approve</Button></Cell>\n                <Cell><Button color=\"teal\" basic onClick={this.onFinalize}>Finalize</Button></Cell>\n            </Row>\n        );\n    };\n}\n\nexport default RequestRow;"]},"metadata":{},"sourceType":"module"}