{"ast":null,"code":"var _jsxFileName = \"/Users/EmpauraX/Desktop/Blockchain/Ethereum_Solidity_Developer/CrowdFunding-Ethereum/pages/campaigns/requests/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../../../components/Layout';\nimport { Button, Table } from 'semantic-ui-react';\nimport { Link } from '../../../routes';\nimport Campaign from '../../../ethereum/campaign';\nimport RequestRow from '../../../components/RequestRow';\n\nclass RequestIndex extends Component {\n  static async getInitialProps(props) {\n    const {\n      address\n    } = props.query;\n    console.log(address); //get instance of campaign\n\n    const campaign = Campaign(address); //get total number of requests from campaign\n\n    const requestCount = await campaign.methods.getRequestsCount().call(); //Iterate from 0 -> requestsCount\n\n    const requests = await Promise.all(Array(parseInt(requestCount)) //Array with length of requestCount. parseInt on returned string from call\n    .fill() //create empty index\n    .map((element, index) => {\n      return campaign.methods.requests(index).call(); // return Individual request\n    }));\n    console.log(requests);\n    return {\n      address,\n      requests,\n      requestCount\n    };\n  }\n\n  rendorRows() {\n    return this.props.requests.map((request, index) => {\n      return __jsx(RequestRow, {\n        key: index,\n        id: index,\n        request: request,\n        address: this.props.address,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      });\n    });\n  }\n\n  render() {\n    const {\n      Header,\n      Row,\n      HeaderCell,\n      Body\n    } = Table;\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, \"Requests\"), __jsx(Link, {\n      route: `/campaigns/${this.props.address}/requests/new`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, __jsx(Button, {\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, \"Add Request\"))), __jsx(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, __jsx(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, __jsx(HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }, \"ID\"), __jsx(HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    }, \"Description\"), __jsx(HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }, \"Amount\"), __jsx(HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    }, \"Vendor\"), __jsx(HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    }, \"Approval Count\"), __jsx(HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }, \"Approve\"), __jsx(HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }, \"Reject\"))), __jsx(Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, this.rendorRows())));\n  }\n\n}\n\nexport default RequestIndex;","map":{"version":3,"sources":["/Users/EmpauraX/Desktop/Blockchain/Ethereum_Solidity_Developer/CrowdFunding-Ethereum/pages/campaigns/requests/index.js"],"names":["React","Component","Layout","Button","Table","Link","Campaign","RequestRow","RequestIndex","getInitialProps","props","address","query","console","log","campaign","requestCount","methods","getRequestsCount","call","requests","Promise","all","Array","parseInt","fill","map","element","index","rendorRows","request","render","Header","Row","HeaderCell","Body"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Layout from '../../../components/Layout';\nimport { Button, Table } from 'semantic-ui-react';\nimport { Link } from '../../../routes';\nimport Campaign from '../../../ethereum/campaign'\nimport RequestRow from '../../../components/RequestRow';\n\nclass RequestIndex extends Component {\n\n    static async getInitialProps(props) {\n        const { address } = props.query;\n        console.log(address)\n\n        //get instance of campaign\n        const campaign = Campaign(address);\n\n        //get total number of requests from campaign\n        const requestCount = await campaign.methods.getRequestsCount().call();\n        //Iterate from 0 -> requestsCount\n        const requests = await Promise.all(\n            Array(parseInt(requestCount)) //Array with length of requestCount. parseInt on returned string from call\n                .fill() //create empty index\n                .map((element, index ) => { \n                return campaign.methods.requests(index).call(); // return Individual request\n            })\n        );\n\n        console.log(requests);\n        return { address, requests, requestCount };\n    }\n\n    rendorRows() {\n        return this.props.requests.map((request, index ) => {\n            return (\n                <RequestRow\n                    key={index}\n                    id={index}\n                    request={request}\n                    address={this.props.address}\n            />\n            );\n        });\n    };\n\n    render() {\n\n        const { Header, Row, HeaderCell, Body } = Table;\n        return (\n            <Layout>\n                <h3>Requests</h3>\n                <Link route={`/campaigns/${this.props.address}/requests/new`}>\n                    <a>\n                        <Button primary>Add Request</Button>\n                    </a>\n                </Link>\n                <Table>\n                    <Header>\n                        <Row>\n                            <HeaderCell>ID</HeaderCell>\n                            <HeaderCell>Description</HeaderCell>\n                            <HeaderCell>Amount</HeaderCell>\n                            <HeaderCell>Vendor</HeaderCell>\n                            <HeaderCell>Approval Count</HeaderCell>\n                            <HeaderCell>Approve</HeaderCell>\n                            <HeaderCell>Reject</HeaderCell>\n                        </Row>\n                    </Header>\n                    <Body>\n                        {this.rendorRows()}\n                    </Body>\n                </Table>\n            </Layout>\n        );\n    };\n}\n\nexport default RequestIndex;"]},"metadata":{},"sourceType":"module"}